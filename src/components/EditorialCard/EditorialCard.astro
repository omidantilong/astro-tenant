---
import type { EditorialCard } from "types/cms"

interface Props extends Partial<EditorialCard> {}

import LinkWrapper from "../LinkWrapper/LinkWrapper.astro"

import { parse } from "@omidantilong/engine/contentful"
import type { HTMLAttributes } from "astro/types"

const data = Astro.props

// const props = {
//   cardHeading: { slot: "cardHeading", attr: (t) => t },
//   cardBody: {
//     slot: "cardBody",
//     attr: async (t) => `<p>${await parse(t)}</p>`,
//   },
// }

// const content = {}
// for (const prop in props) {
//   const p = props[prop as keyof typeof props]

//   content[prop] = Astro.slots[prop]
//     ? await Astro.slots.render(p.slot)
//     : data[prop] && (await p.attr(data[prop]))
// }

// const { cardHeading, cardBody } = content

const cardBody = Astro.slots.cardBody
  ? await Astro.slots.render("cardBody")
  : data && data.cardBody && `<p>${await parse(data.cardBody)}</p>`

const cardHeading = Astro.slots.cardHeading
  ? await Astro.slots.render("cardHeading")
  : data && data.cardHeading && `<h3>${data.cardHeading}</h3>`

//console.log(cardBody)
---

<article class="cws-editorial-card">
  <LinkWrapper data={(data && data.link) || false}>
    <Fragment set:html={cardHeading} />
    <Fragment set:html={cardBody} />
  </LinkWrapper>
</article>

<!-- <style>
  @import "./EditorialCard.scss";
</style> -->
