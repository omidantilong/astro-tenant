---
import type { Link } from "../../../types/tenant"

interface Props {
  data: Link
}

import { getFullPath } from "@omidantilong/engine/util/path"
//import { getEntryPathFromRef } from "engine/contentful"
let Wrapper = "div"
let wrapperProps: { href?: string } = {}

const link = Astro.props.data

if (link) {
  Wrapper = "a"
  if (link.type === "InternalLink") {
    // Uncomment these lines to fetch individual link data with separate api call
    // const { data: linkData } = await getInternalLink({ id: link.sys.id })
    // wrapperProps.href = getFullPath(linkData.internalLink.page)

    // use getEntryPath if we are using precomputed links
    // use getFullPath if we are using graphql link fragments

    //wrapperProps.href = await getEntyPathFromRef(link.sys.id)
    wrapperProps.href = getFullPath(link.page)
  }
}
---

<Wrapper {...wrapperProps}>
  <slot />
</Wrapper>
