---
interface Props {
  data: Section
  //links: Record<string, Link>
}

import { resolveLinks } from "engine/contentful"
//import EditorialCard from "@/components/EditorialCard/EditorialCard.astro"

import * as components from "@/components"

const { title, content } = Astro.props.data
//console.log(Astro.props)
// If links are passed in after being collection from nested sections
//const links = Astro.props.links
//const links = await resolveLinks(contentCollection.items)

const contentModules: Array<ContentModule> = content || []
function ucfirst(v: string) {
  return String(v).charAt(0).toUpperCase() + String(v).slice(1)
}
---

<section class="wrap flow">
  <h2>{title}</h2>
  <div class="cws-grid">
    {
      contentModules.map((entry) => {
        entry.type = ucfirst(entry.sys.contentType.sys.id)

        if (components[entry.type]) {
          //if ("link" in entry) entry.link = links[entry.sys.id]
          //const Component = components[entry.type]
          const Component = components[entry.type] as any
          return <Component data={entry.fields} />
        }
      })
    }
  </div>
</section>
