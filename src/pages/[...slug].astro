---
import Layout from "../layouts/Layout.astro"

import { pageNotFound } from "../util/responses"
import { sanitizePath } from "../util/common"

//import { getPage, getFullPath } from "../lib/contentful"

import { getPage, getFullPath } from "../lib/contentfulLegacy"

const pathname = sanitizePath(Astro.url.pathname)

const { data } = await getPage(pathname)

// Redirect if data.redirect is true
if (data.redirect) return Astro.redirect(data.to)

// Return 404 if there is no page with that slug
if (!data?.pageCollection?.items.length) return pageNotFound()

const page = data.pageCollection.items[0]
const path = sanitizePath(getFullPath(page))

// At this point we have looked up the page
// but if the full path is incorrect return a 404
// Is there a better way to handle this... probably
if (path !== pathname) return pageNotFound()

const entries: Entry[] = page.modulesCollection.items || []
const components: { [key: string]: { default: Function } } = {}
//console.log(page)
//const Layout = await import(`../layouts/${page.type}.astro`)
---

<Layout title="Welcome to Astro.">
  <main>
    <div class="wrap">
      <h1>{page.title}</h1>
      <time>{page.sys.publishedAt}</time>
      {
        entries
          .filter((entry) => entry)
          .map(async (entry) => {
            if (!components[entry.type]) {
              components[entry.type] = await import(
                `../components/${entry.type}/${entry.type}.astro`
              )
            }
            const Component = components[entry.type].default
            return <Component data={entry} />
            //if (entry.type === "Section") return <Components.Section data={entry} />
            //if (entry.type === "Text") return <Components.Text data={entry} />
          })
      }
    </div>
  </main>
</Layout>
